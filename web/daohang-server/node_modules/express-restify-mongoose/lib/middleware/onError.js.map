{"version":3,"sources":["../../src/middleware/onError.js"],"names":[],"mappings":";;AAAA,IAAM,iBAAiB,QAAQ,iBAAR,CAAjB;;AAEN,OAAO,OAAP,GAAiB,UAAU,SAAV,EAAqB;AACpC,SAAO,UAAU,GAAV,EAAe,GAAf,EAAoB,GAApB,EAAyB,IAAzB,EAA+B;AACpC,QAAM,gBAAgB,eAAe,GAAf,CAAhB,CAD8B;;AAGpC,WAAO,cAAc,KAAd,CAH6B;;AAKpC,QAAI,cAAc,MAAd,EAAsB;AACxB,WAAK,IAAI,GAAJ,IAAW,cAAc,MAAd,EAAsB;AACpC,eAAO,cAAc,MAAd,CAAqB,GAArB,EAA0B,KAA1B,CAD6B;OAAtC;KADF;;AAMA,QAAI,SAAJ,CAAc,cAAd,EAA8B,kBAA9B,EAXoC;;AAapC,QAAI,SAAJ,EAAe;AACb,UAAI,MAAJ,CAAW,IAAI,GAAJ,CAAQ,UAAR,CAAX,CAA+B,IAA/B,CAAoC,aAApC,EADa;KAAf,MAEO;AACL,UAAI,IAAJ,CAAS,IAAI,GAAJ,CAAQ,UAAR,EAAoB,aAA7B,EADK;KAFP;GAbK,CAD6B;CAArB","file":"onError.js","sourcesContent":["const serializeError = require('serialize-error')\r\n\r\nmodule.exports = function (isExpress) {\r\n  return function (err, req, res, next) {\r\n    const serializedErr = serializeError(err)\r\n\r\n    delete serializedErr.stack\r\n\r\n    if (serializedErr.errors) {\r\n      for (let key in serializedErr.errors) {\r\n        delete serializedErr.errors[key].stack\r\n      }\r\n    }\r\n\r\n    res.setHeader('Content-Type', 'application/json')\r\n\r\n    if (isExpress) {\r\n      res.status(req.erm.statusCode).send(serializedErr)\r\n    } else {\r\n      res.send(req.erm.statusCode, serializedErr)\r\n    }\r\n  }\r\n}\r\n"]}