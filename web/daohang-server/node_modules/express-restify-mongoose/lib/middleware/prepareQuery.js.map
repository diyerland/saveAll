{"version":3,"sources":["../../src/middleware/prepareQuery.js"],"names":[],"mappings":"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","file":"prepareQuery.js","sourcesContent":["const _ = require('lodash')\r\nconst isCoordinates = require('is-coordinates')\r\n\r\nmodule.exports = function (options) {\r\n  const errorHandler = require('../errorHandler')(options)\r\n\r\n  function jsonQueryParser (key, value) {\r\n    if (key === '$regex' && !options.allowRegex) {\r\n      return undefined\r\n    }\r\n\r\n    if (_.isString(value)) {\r\n      if (value[0] === '~') { // parse RegExp\r\n        return options.allowRegex ? new RegExp(value.substr(1), 'i') : undefined\r\n      } else if (value[0] === '>') {\r\n        if (value[1] === '=') {\r\n          return { $gte: value.substr(2) }\r\n        } else {\r\n          return { $gt: value.substr(1) }\r\n        }\r\n      } else if (value[0] === '<') {\r\n        if (value[1] === '=') {\r\n          return { $lte: value.substr(2) }\r\n        } else {\r\n          return { $lt: value.substr(1) }\r\n        }\r\n      } else if (value[0] === '!' && value[1] === '=') {\r\n        return { $ne: value.substr(2) }\r\n      /* This feature was disabled because it requires MongoDB 3\r\n      } else if (value[0] === '=') {\r\n        return { $eq: value.substr(1) }*/\r\n      }\r\n    } else if (_.isArray(value) && key[0] !== '$' && key !== 'coordinates' && !isCoordinates(value)) {\r\n      return { $in: value }\r\n    }\r\n\r\n    return value\r\n  }\r\n\r\n  function parseQueryOptions (queryOptions) {\r\n    if (queryOptions.select && _.isString(queryOptions.select)) {\r\n      let select = queryOptions.select.split(',')\r\n      queryOptions.select = {}\r\n\r\n      for (let i = 0, length = select.length; i < length; i++) {\r\n        if (select[i][0] === '-') {\r\n          queryOptions.select[select[i].substring(1)] = 0\r\n        } else {\r\n          queryOptions.select[select[i]] = 1\r\n        }\r\n      }\r\n    }\r\n\r\n    if (queryOptions.populate) {\r\n      if (_.isString(queryOptions.populate)) {\r\n        let populate = queryOptions.populate.split(',')\r\n        queryOptions.populate = []\r\n\r\n        for (let i = 0, length = populate.length; i < length; i++) {\r\n          queryOptions.populate.push({\r\n            path: populate[i]\r\n          })\r\n\r\n          for (let key in queryOptions.select) {\r\n            if (key.indexOf(populate[i] + '.') === 0) {\r\n              if (queryOptions.populate[i].select) {\r\n                queryOptions.populate[i].select += ' '\r\n              } else {\r\n                queryOptions.populate[i].select = ''\r\n              }\r\n\r\n              if (queryOptions.select[key] === 0) {\r\n                queryOptions.populate[i].select += '-'\r\n              }\r\n\r\n              queryOptions.populate[i].select += key.substring(populate[i].length + 1)\r\n              delete queryOptions.select[key]\r\n            }\r\n          }\r\n\r\n          // If other specific fields are selected, add the populated field\r\n          if (queryOptions.select) {\r\n            if (Object.keys(queryOptions.select).length > 0 && !queryOptions.select[populate[i]]) {\r\n              queryOptions.select[populate[i]] = 1\r\n            } else if (Object.keys(queryOptions.select).length === 0) {\r\n              delete queryOptions.select\r\n            }\r\n          }\r\n        }\r\n      } else if (!_.isArray(queryOptions.populate)) {\r\n        queryOptions.populate = [queryOptions.populate]\r\n      }\r\n    }\r\n\r\n    return queryOptions\r\n  }\r\n\r\n  return function (req, res, next) {\r\n    const whitelist = ['distinct', 'limit', 'populate', 'query', 'select', 'skip', 'sort']\r\n\r\n    req._ermQueryOptions = {}\r\n\r\n    for (let key in req.query) {\r\n      if (whitelist.indexOf(key) === -1) {\r\n        continue\r\n      }\r\n\r\n      if (key === 'query') {\r\n        try {\r\n          req._ermQueryOptions[key] = JSON.parse(req.query[key], jsonQueryParser)\r\n        } catch (e) {\r\n          return errorHandler(req, res, next)(new Error(`invalid_json_${key}`))\r\n        }\r\n      } else if (key === 'populate' || key === 'select' || key === 'sort') {\r\n        try {\r\n          req._ermQueryOptions[key] = JSON.parse(req.query[key])\r\n        } catch (e) {\r\n          req._ermQueryOptions[key] = req.query[key]\r\n        }\r\n      } else if (key === 'limit' || key === 'skip') {\r\n        req._ermQueryOptions[key] = parseInt(req.query[key], 10)\r\n      } else {\r\n        req._ermQueryOptions[key] = req.query[key]\r\n      }\r\n    }\r\n\r\n    req._ermQueryOptions = parseQueryOptions(req._ermQueryOptions)\r\n\r\n    next()\r\n  }\r\n}\r\n"]}